<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\Template.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\Template.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060183: Last Updated: Sat Dec 05 16:54:50 2020
<BR><P>
<H3>Maximum Stack Usage =        116 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; UART_Print_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[15]">ADC_COMP_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[15]">ADC_COMP_IRQHandler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[36]">assert_failed</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[36]">assert_failed</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[15]">ADC_COMP_IRQHandler</a> from startup_at32f421c8t7.o(.text) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from at32f4xx_it.o(i.BusFault_Handler) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[12]">DMA1_Channel1_IRQHandler</a> from startup_at32f421c8t7.o(.text) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[13]">DMA1_Channel3_2_IRQHandler</a> from startup_at32f421c8t7.o(.text) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[14]">DMA1_Channel7_4_IRQHandler</a> from startup_at32f421c8t7.o(.text) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from at32f4xx_it.o(i.DebugMon_Handler) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[c]">ERTC_IRQHandler</a> from startup_at32f421c8t7.o(.text) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[11]">EXTI15_4_IRQHandler</a> from startup_at32f421c8t7.o(.text) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[f]">EXTI1_0_IRQHandler</a> from startup_at32f421c8t7.o(.text) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[10]">EXTI3_2_IRQHandler</a> from startup_at32f421c8t7.o(.text) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[d]">FLASH_IRQHandler</a> from startup_at32f421c8t7.o(.text) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from at32f4xx_it.o(i.HardFault_Handler) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[24]">I2C1_ER_IRQHandler</a> from startup_at32f421c8t7.o(.text) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[1e]">I2C1_EV_IRQHandler</a> from startup_at32f421c8t7.o(.text) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[25]">I2C2_ER_IRQHandler</a> from startup_at32f421c8t7.o(.text) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[1f]">I2C2_EV_IRQHandler</a> from startup_at32f421c8t7.o(.text) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from at32f4xx_it.o(i.MemManage_Handler) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from at32f4xx_it.o(i.NMI_Handler) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[b]">PVD_IRQHandler</a> from startup_at32f421c8t7.o(.text) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from at32f4xx_it.o(i.PendSV_Handler) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[e]">RCC_IRQHandler</a> from startup_at32f421c8t7.o(.text) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_at32f421c8t7.o(.text) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[20]">SPI1_IRQHandler</a> from startup_at32f421c8t7.o(.text) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[21]">SPI2_IRQHandler</a> from startup_at32f421c8t7.o(.text) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from at32f4xx_it.o(i.SVC_Handler) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from at32f4xx_it.o(i.SysTick_Handler) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[27]">SystemInit</a> from system_at32f4xx.o(i.SystemInit) referenced from startup_at32f421c8t7.o(.text)
 <LI><a href="#[1a]">TMR14_GLOBAL_IRQHandler</a> from startup_at32f421c8t7.o(.text) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[1b]">TMR15_GLOBAL_IRQHandler</a> from startup_at32f421c8t7.o(.text) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[1c]">TMR16_GLOBAL_IRQHandler</a> from startup_at32f421c8t7.o(.text) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[1d]">TMR17_GLOBAL_IRQHandler</a> from startup_at32f421c8t7.o(.text) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[16]">TMR1_BRK_UP_TRG_COM_IRQHandler</a> from startup_at32f421c8t7.o(.text) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[17]">TMR1_CC_IRQHandler</a> from startup_at32f421c8t7.o(.text) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[18]">TMR3_GLOBAL_IRQHandler</a> from startup_at32f421c8t7.o(.text) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[19]">TMR6_GLOBAL_IRQHandler</a> from startup_at32f421c8t7.o(.text) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[22]">USART1_IRQHandler</a> from startup_at32f421c8t7.o(.text) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[23]">USART2_IRQHandler</a> from startup_at32f421c8t7.o(.text) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from at32f4xx_it.o(i.UsageFault_Handler) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[a]">WWDG_IRQHandler</a> from startup_at32f421c8t7.o(.text) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[28]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_at32f421c8t7.o(.text)
 <LI><a href="#[29]">fputc</a> from at32_board.o(i.fputc) referenced from printf1.o(i.__0printf$1)
 <LI><a href="#[26]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[28]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(.text)
</UL>
<P><STRONG><a name="[5c]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[2a]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[30]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[5d]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[5e]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[5f]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[60]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[61]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_at32f421c8t7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>ADC_COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421c8t7.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_COMP_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_COMP_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421c8t7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>DMA1_Channel3_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421c8t7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>DMA1_Channel7_4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421c8t7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>ERTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421c8t7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI15_4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421c8t7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>EXTI1_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421c8t7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI3_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421c8t7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421c8t7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421c8t7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421c8t7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421c8t7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421c8t7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421c8t7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421c8t7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421c8t7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421c8t7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>TMR14_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421c8t7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>TMR15_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421c8t7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>TMR16_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421c8t7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>TMR17_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421c8t7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TMR1_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421c8t7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>TMR1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421c8t7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TMR3_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421c8t7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>TMR6_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421c8t7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421c8t7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421c8t7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421c8t7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>__aeabi_fdiv</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLLFrefTableConfig
</UL>

<P><STRONG><a name="[4c]"></a>__ARM_scalbnf</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, fscalb.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLLFrefTableConfig
</UL>

<P><STRONG><a name="[62]"></a>scalbnf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fscalb.o(.text), UNUSED)

<P><STRONG><a name="[2e]"></a>__aeabi_ui2f</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLLFrefTableConfig
</UL>

<P><STRONG><a name="[63]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[59]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[64]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[2d]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>

<P><STRONG><a name="[2f]"></a>_float_epilogue</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
</UL>

<P><STRONG><a name="[2b]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[65]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[31]"></a>ADC_Configuration</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, myadc.o(i.ADC_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ADC_Configuration &rArr; ADC_RegularChannelConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StructInit
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_RegularChannelConfig
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_START
</UL>

<P><STRONG><a name="[35]"></a>ADC_Ctrl</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, at32f4xx_adc.o(i.ADC_Ctrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ADC_Ctrl
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_START
</UL>

<P><STRONG><a name="[37]"></a>ADC_DMACtrl</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, at32f4xx_adc.o(i.ADC_DMACtrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ADC_DMACtrl
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_START
</UL>

<P><STRONG><a name="[38]"></a>ADC_GetCalibrationStatus</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, at32f4xx_adc.o(i.ADC_GetCalibrationStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ADC_GetCalibrationStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_START
</UL>

<P><STRONG><a name="[39]"></a>ADC_GetResetCalibrationStatus</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, at32f4xx_adc.o(i.ADC_GetResetCalibrationStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ADC_GetResetCalibrationStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_START
</UL>

<P><STRONG><a name="[33]"></a>ADC_Init</STRONG> (Thumb, 206 bytes, Stack size 16 bytes, at32f4xx_adc.o(i.ADC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ADC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Configuration
</UL>

<P><STRONG><a name="[34]"></a>ADC_RegularChannelConfig</STRONG> (Thumb, 282 bytes, Stack size 24 bytes, at32f4xx_adc.o(i.ADC_RegularChannelConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ADC_RegularChannelConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Configuration
</UL>

<P><STRONG><a name="[3a]"></a>ADC_RstCalibration</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, at32f4xx_adc.o(i.ADC_RstCalibration))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_RstCalibration
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_START
</UL>

<P><STRONG><a name="[3b]"></a>ADC_START</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, myadc.o(i.ADC_START))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = ADC_START &rArr; DMA_Configuration &rArr; DMA_Reset
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StartCalibration
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_SoftwareStartConvCtrl
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_RstCalibration
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetResetCalibrationStatus
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetCalibrationStatus
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMACtrl
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Ctrl
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Configuration
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Configuration
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[40]"></a>ADC_SoftwareStartConvCtrl</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, at32f4xx_adc.o(i.ADC_SoftwareStartConvCtrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ADC_SoftwareStartConvCtrl
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_START
</UL>

<P><STRONG><a name="[3f]"></a>ADC_StartCalibration</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, at32f4xx_adc.o(i.ADC_StartCalibration))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_StartCalibration
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_START
</UL>

<P><STRONG><a name="[32]"></a>ADC_StructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f4xx_adc.o(i.ADC_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Configuration
</UL>

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f4xx_it.o(i.BusFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>DMA_ChannelEnable</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, at32f4xx_dma.o(i.DMA_ChannelEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DMA_ChannelEnable
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Configuration
</UL>

<P><STRONG><a name="[3e]"></a>DMA_Configuration</STRONG> (Thumb, 76 bytes, Stack size 56 bytes, myadc.o(i.DMA_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = DMA_Configuration &rArr; DMA_Reset
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Reset
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DefaultInitParaConfig
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ChannelEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_START
</UL>

<P><STRONG><a name="[43]"></a>DMA_DefaultInitParaConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, at32f4xx_dma.o(i.DMA_DefaultInitParaConfig))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Configuration
</UL>

<P><STRONG><a name="[44]"></a>DMA_Init</STRONG> (Thumb, 288 bytes, Stack size 16 bytes, at32f4xx_dma.o(i.DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Configuration
</UL>

<P><STRONG><a name="[42]"></a>DMA_Reset</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, at32f4xx_dma.o(i.DMA_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DMA_Reset
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Configuration
</UL>

<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f4xx_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>GPIO_Configuration</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, myadc.o(i.GPIO_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GPIO_Configuration &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_START
</UL>

<P><STRONG><a name="[46]"></a>GPIO_Init</STRONG> (Thumb, 364 bytes, Stack size 32 bytes, at32f4xx_gpio_ex.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Print_Init
</UL>

<P><STRONG><a name="[47]"></a>GPIO_PinAFConfig</STRONG> (Thumb, 184 bytes, Stack size 16 bytes, at32f4xx_gpio_ex.o(i.GPIO_PinAFConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Print_Init
</UL>

<P><STRONG><a name="[45]"></a>GPIO_StructInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at32f4xx_gpio_ex.o(i.GPIO_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Print_Init
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f4xx_it.o(i.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f4xx_it.o(i.MemManage_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f4xx_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f4xx_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>RCC_ADCCLKConfig</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, at32f4xx_rcc.o(i.RCC_ADCCLKConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_ADCCLKConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[49]"></a>RCC_AHBPeriphClockCmd</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, at32f4xx_rcc.o(i.RCC_AHBPeriphClockCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RCC_AHBPeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Print_Init
</UL>

<P><STRONG><a name="[4a]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, at32f4xx_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RCC_APB2PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Print_Init
</UL>

<P><STRONG><a name="[3c]"></a>RCC_Configuration</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, myadc.o(i.RCC_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RCC_Configuration &rArr; RCC_APB2PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_ADCCLKConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_START
</UL>

<P><STRONG><a name="[55]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 288 bytes, Stack size 20 bytes, at32f4xx_rcc.o(i.RCC_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[4b]"></a>RCC_PLLFrefTableConfig</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, at32f4xx_rcc.o(i.RCC_PLLFrefTableConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RCC_PLLFrefTableConfig &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockTo120M
</UL>

<P><STRONG><a name="[4d]"></a>RCC_StepModeCmd</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, at32f4xx_rcc.o(i.RCC_StepModeCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_StepModeCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockTo120M
</UL>

<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f4xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f4xx_it.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>SystemInit</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, system_at32f4xx.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SystemInit &rArr; SetSysClockTo120M &rArr; RCC_PLLFrefTableConfig &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockTo120M
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(.text)
</UL>
<P><STRONG><a name="[4f]"></a>UART_Print_Init</STRONG> (Thumb, 174 bytes, Stack size 48 bytes, at32_board.o(i.UART_Print_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = UART_Print_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_StructInit
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_INTConfig
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[53]"></a>USART_Cmd</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, at32f4xx_usart.o(i.USART_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART_Cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Print_Init
</UL>

<P><STRONG><a name="[54]"></a>USART_GetFlagStatus</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, at32f4xx_usart.o(i.USART_GetFlagStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USART_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[52]"></a>USART_INTConfig</STRONG> (Thumb, 184 bytes, Stack size 32 bytes, at32f4xx_usart.o(i.USART_INTConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USART_INTConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Print_Init
</UL>

<P><STRONG><a name="[51]"></a>USART_Init</STRONG> (Thumb, 346 bytes, Stack size 48 bytes, at32f4xx_usart.o(i.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Print_Init
</UL>

<P><STRONG><a name="[56]"></a>USART_SendData</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, at32f4xx_usart.o(i.USART_SendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[50]"></a>USART_StructInit</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, at32f4xx_usart.o(i.USART_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Print_Init
</UL>

<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f4xx_it.o(i.UsageFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>__0printf$1</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printf1.o(i.__0printf$1), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[66]"></a>__1printf$1</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf1.o(i.__0printf$1), UNUSED)

<P><STRONG><a name="[5a]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf1.o(i.__0printf$1))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[67]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[68]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[69]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[36]"></a>assert_failed</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(i.assert_failed))
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_StepModeCmd
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_INTConfig
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_ADCCLKConfig
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Reset
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ChannelEnable
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StartCalibration
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_SoftwareStartConvCtrl
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_RstCalibration
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_RegularChannelConfig
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetResetCalibrationStatus
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetCalibrationStatus
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMACtrl
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Ctrl
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>

<P><STRONG><a name="[29]"></a>fputc</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, at32_board.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = fputc &rArr; USART_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf1.o(i.__0printf$1)
</UL>
<P><STRONG><a name="[26]"></a>main</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = main &rArr; UART_Print_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Print_Init
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_START
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[5b]"></a>Delay</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(i.Delay))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4e]"></a>SetSysClockTo120M</STRONG> (Thumb, 174 bytes, Stack size 16 bytes, system_at32f4xx.o(i.SetSysClockTo120M))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SetSysClockTo120M &rArr; RCC_PLLFrefTableConfig &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_StepModeCmd
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLLFrefTableConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[58]"></a>_printf_core</STRONG> (Thumb, 336 bytes, Stack size 88 bytes, printf1.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$1
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
